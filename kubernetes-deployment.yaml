apiVersion: v1
kind: Namespace
metadata:
  name: idp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
  namespace: idp
data:
  kong.yml: |
    _format_version: "3.0"

    services:
    - name: adminer
      url: http://adminer-service:8080
      routes:
      - name: adminer
        paths:
        - /adminer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-deployment
  namespace: idp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
      - name: kong-container
        image: kong:3.6.1
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: "/usr/local/kong/declarative/kong.yml"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
        ports:
        - name: kong-port
          containerPort: 8000
        volumeMounts:
        - name: kong-config
          mountPath: /usr/local/kong/declarative
      volumes:
      - name: kong-config
        configMap:
          name: kong-config
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer-deployment
  namespace: idp
  labels:
    app: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
      - name: adminer-container
        image: adminer:4.8.1
        ports:
        - name: adminer-port
          containerPort: 8080
      restartPolicy: Always
---
apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  name: db-kubegres
  namespace: idp
spec:
  replicas: 3
  image: postgres:16.2
  database:
    size: 200Mi
  env:
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-secret
          key: superUserPassword
    - name: POSTGRES_REPLICATION_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-secret
          key: replicationUserPassword
    - name: POSTGRES_DB
      value: store
    - name: POSTGRES_USER
      value: admin
---
apiVersion: v1
kind: Service
metadata:
  name: kong-service
  namespace: idp
spec:
  type: LoadBalancer
  selector:
    app: kong
  ports:
  - port: 80
    targetPort: kong-port
    nodePort: 30000
---
apiVersion: v1
kind: Service
metadata:
  name: adminer-service
  namespace: idp
spec:
  type: ClusterIP
  selector:
    app: adminer
  ports:
    - port: 8080
      targetPort: adminer-port
---
