apiVersion: apps/v1
kind: Deployment
metadata:
  name: io-deployment
  namespace: idp
spec:
  selector:
    matchLabels:
      app: io
  replicas: 1
  template:
    metadata:
      labels:
        app: io
    spec:
      containers:
      - name: io
        image: 2001slavic/idp-proiect-io-service:latest
        imagePullPolicy: Always
        env:
        - name: DATABASE_USERNAME
          value: admin
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: superUserPassword
        - name: DATABASE_NAME
          value: store
        - name: IO_SERVICE_PORT
          value: "10000"
        - name: IO_SERVICE_DRIVER_CLASS_NAME
          value: org.postgresql.Driver
        - name: IO_SERVICE_DATASOURCE_URL
          value: jdbc:postgresql://db-kubegres:5432/${DATABASE_NAME}
        - name: IO_SERVICE_DATABASE
          value: postgresql
        ports:
        - name: io-port
          containerPort: 10000

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: io-service
  namespace: idp
spec:
  type: ClusterIP
  selector:
    app: io
  ports:
    - port: 10000
      targetPort: io-port
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-io-self
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: io
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: io
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: io
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-auth-io
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: auth
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: io
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: io
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-io-auth
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: io
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: auth
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: auth
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-business-io
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: business-logic
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: io
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: io
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-io-business
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: io
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: business-logic
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: business-logic
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-io-db
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: io
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: db-kubegres
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: db-kubegres
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-db-io
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: db-kubegres
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: io
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: io
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-io-portainer
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: io
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: portainer
  egress:
    - to:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: portainer
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-io-prometheus
  namespace: idp
spec:
  podSelector:
    matchLabels:
      app: io
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: prometheus
  egress:
    - to:
      - podSelector:
          matchLabels:
            app: prometheus
  policyTypes:
  - Ingress
  - Egress
